-- Messaging Users Table
-- This table stores users who have been added to the messaging system

CREATE TABLE MESSAGING_USERS (
    ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    USER_ID NUMBER NOT NULL,
    USER_TYPE VARCHAR2(20) NOT NULL CHECK (USER_TYPE IN ('app_user', 'attendee')),
    CONFERENCE_ID NUMBER,
    ADDED_BY NUMBER,
    ADDED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    IS_ACTIVE NUMBER(1) DEFAULT 1,
    MESSAGE_COUNT NUMBER DEFAULT 0,
    LAST_MESSAGE_TIME TIMESTAMP,
    CREATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Create indexes for better performance
CREATE INDEX idx_messaging_users_user_id ON MESSAGING_USERS(USER_ID);
CREATE INDEX idx_messaging_users_conference_id ON MESSAGING_USERS(CONFERENCE_ID);
CREATE INDEX idx_messaging_users_active ON MESSAGING_USERS(IS_ACTIVE);

-- Add foreign key constraints
ALTER TABLE MESSAGING_USERS ADD CONSTRAINT fk_messaging_users_app_user 
    FOREIGN KEY (USER_ID) REFERENCES APP_USERS(ID) ON DELETE CASCADE;

ALTER TABLE MESSAGING_USERS ADD CONSTRAINT fk_messaging_users_attendee 
    FOREIGN KEY (USER_ID) REFERENCES ATTENDEES(ID) ON DELETE CASCADE;

ALTER TABLE MESSAGING_USERS ADD CONSTRAINT fk_messaging_users_conference 
    FOREIGN KEY (CONFERENCE_ID) REFERENCES CONFERENCES(ID) ON DELETE CASCADE;

ALTER TABLE MESSAGING_USERS ADD CONSTRAINT fk_messaging_users_added_by 
    FOREIGN KEY (ADDED_BY) REFERENCES APP_USERS(ID) ON DELETE SET NULL;

-- Create a trigger to update UPDATED_AT timestamp
CREATE OR REPLACE TRIGGER trg_messaging_users_updated_at
    BEFORE UPDATE ON MESSAGING_USERS
    FOR EACH ROW
BEGIN
    :NEW.UPDATED_AT := CURRENT_TIMESTAMP;
END;
/

-- Insert some sample data (optional)
-- This will be populated when users are added through the API
