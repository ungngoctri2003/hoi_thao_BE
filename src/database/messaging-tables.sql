-- Messaging System Tables
-- This script creates the necessary tables for the messaging system

-- 1. Messaging Sessions Table
-- Stores conversation sessions between users
CREATE TABLE MESSAGING_SESSIONS (
    ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    USER1_ID NUMBER NOT NULL,
    USER2_ID NUMBER NOT NULL,
    CONFERENCE_ID NUMBER,
    CREATED_AT TIMESTAMP DEFAULT SYSTIMESTAMP,
    UPDATED_AT TIMESTAMP DEFAULT SYSTIMESTAMP,
    IS_ACTIVE NUMBER(1) DEFAULT 1,
    CONSTRAINT FK_MS_USER1 FOREIGN KEY (USER1_ID) REFERENCES APP_USERS(ID),
    CONSTRAINT FK_MS_USER2 FOREIGN KEY (USER2_ID) REFERENCES APP_USERS(ID),
    CONSTRAINT FK_MS_CONFERENCE FOREIGN KEY (CONFERENCE_ID) REFERENCES CONFERENCES(ID),
    CONSTRAINT CHK_MS_ACTIVE CHECK (IS_ACTIVE IN (0, 1)),
    CONSTRAINT UK_MS_USERS UNIQUE (USER1_ID, USER2_ID, CONFERENCE_ID)
);

-- 2. Messaging Messages Table
-- Stores individual messages in conversations
CREATE TABLE MESSAGING_MESSAGES (
    ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    SESSION_ID NUMBER NOT NULL,
    CONTENT CLOB NOT NULL,
    MESSAGE_TYPE VARCHAR2(20) DEFAULT 'text',
    SENDER_ID NUMBER NOT NULL,
    ATTENDEE_ID NUMBER,
    CREATED_AT TIMESTAMP DEFAULT SYSTIMESTAMP,
    IS_READ NUMBER(1) DEFAULT 0,
    READ_AT TIMESTAMP,
    CONSTRAINT FK_MM_SESSION FOREIGN KEY (SESSION_ID) REFERENCES MESSAGING_SESSIONS(ID),
    CONSTRAINT FK_MM_SENDER FOREIGN KEY (SENDER_ID) REFERENCES APP_USERS(ID),
    CONSTRAINT FK_MM_ATTENDEE FOREIGN KEY (ATTENDEE_ID) REFERENCES APP_USERS(ID),
    CONSTRAINT CHK_MM_READ CHECK (IS_READ IN (0, 1)),
    CONSTRAINT CHK_MM_TYPE CHECK (MESSAGE_TYPE IN ('text', 'image', 'file'))
);

-- 3. Messaging Users Table
-- Tracks which users are part of the messaging system
CREATE TABLE MESSAGING_USERS (
    ID NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    USER_ID NUMBER NOT NULL,
    CONFERENCE_ID NUMBER,
    ADDED_AT TIMESTAMP DEFAULT SYSTIMESTAMP,
    IS_ACTIVE NUMBER(1) DEFAULT 1,
    CONSTRAINT FK_MU_USER FOREIGN KEY (USER_ID) REFERENCES APP_USERS(ID),
    CONSTRAINT FK_MU_CONFERENCE FOREIGN KEY (CONFERENCE_ID) REFERENCES CONFERENCES(ID),
    CONSTRAINT CHK_MU_ACTIVE CHECK (IS_ACTIVE IN (0, 1)),
    CONSTRAINT UK_MU_USER_CONF UNIQUE (USER_ID, CONFERENCE_ID)
);

-- Create indexes for better performance
CREATE INDEX IDX_MS_USERS ON MESSAGING_SESSIONS(USER1_ID, USER2_ID);
CREATE INDEX IDX_MS_CONFERENCE ON MESSAGING_SESSIONS(CONFERENCE_ID);
CREATE INDEX IDX_MM_SESSION ON MESSAGING_MESSAGES(SESSION_ID);
CREATE INDEX IDX_MM_SENDER ON MESSAGING_MESSAGES(SENDER_ID);
CREATE INDEX IDX_MM_ATTENDEE ON MESSAGING_MESSAGES(ATTENDEE_ID);
CREATE INDEX IDX_MM_CREATED_AT ON MESSAGING_MESSAGES(CREATED_AT);
CREATE INDEX IDX_MU_USER ON MESSAGING_USERS(USER_ID);
CREATE INDEX IDX_MU_CONFERENCE ON MESSAGING_USERS(CONFERENCE_ID);

-- Create sequence for better ID generation (if needed)
-- CREATE SEQUENCE SEQ_MESSAGING_SESSIONS START WITH 1 INCREMENT BY 1;
-- CREATE SEQUENCE SEQ_MESSAGING_MESSAGES START WITH 1 INCREMENT BY 1;
-- CREATE SEQUENCE SEQ_MESSAGING_USERS START WITH 1 INCREMENT BY 1;

-- Insert some sample data for testing
INSERT INTO MESSAGING_USERS (USER_ID, CONFERENCE_ID, IS_ACTIVE) 
SELECT ID, 1, 1 FROM APP_USERS WHERE ROWNUM <= 5;

-- Create a sample messaging session
INSERT INTO MESSAGING_SESSIONS (USER1_ID, USER2_ID, CONFERENCE_ID, IS_ACTIVE)
VALUES (1, 2, 1, 1);

-- Create some sample messages
INSERT INTO MESSAGING_MESSAGES (SESSION_ID, CONTENT, MESSAGE_TYPE, SENDER_ID, ATTENDEE_ID, IS_READ)
VALUES (1, 'Xin chào! Bạn có thể giúp tôi không?', 'text', 1, 2, 0);

INSERT INTO MESSAGING_MESSAGES (SESSION_ID, CONTENT, MESSAGE_TYPE, SENDER_ID, ATTENDEE_ID, IS_READ)
VALUES (1, 'Chào bạn! Tôi có thể giúp gì cho bạn?', 'text', 2, 1, 0);

COMMIT;

-- Grant necessary permissions
GRANT SELECT, INSERT, UPDATE, DELETE ON MESSAGING_SESSIONS TO PUBLIC;
GRANT SELECT, INSERT, UPDATE, DELETE ON MESSAGING_MESSAGES TO PUBLIC;
GRANT SELECT, INSERT, UPDATE, DELETE ON MESSAGING_USERS TO PUBLIC;
