-- Notifications System Database Schema for Oracle
-- Tạo bảng notifications để lưu trữ thông báo

-- Bảng notifications
CREATE TABLE notifications (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id NUMBER NOT NULL,
    title VARCHAR2(255) NOT NULL,
    message CLOB NOT NULL,
    type VARCHAR2(20) NOT NULL DEFAULT 'info' CHECK (type IN ('info', 'success', 'warning', 'error')),
    category VARCHAR2(20) NOT NULL DEFAULT 'general' CHECK (category IN ('system', 'permission', 'conference', 'session', 'registration', 'general')),
    is_read NUMBER(1) NOT NULL DEFAULT 0 CHECK (is_read IN (0, 1)),
    is_archived NUMBER(1) NOT NULL DEFAULT 0 CHECK (is_archived IN (0, 1)),
    data CLOB NULL, -- Lưu trữ dữ liệu bổ sung (metadata) dưới dạng JSON
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    expires_at TIMESTAMP NULL, -- Thời gian hết hạn thông báo
    
    -- Foreign key constraints
    CONSTRAINT fk_notifications_user FOREIGN KEY (user_id) REFERENCES app_users(ID) ON DELETE CASCADE
);

-- Bảng notification_templates
CREATE TABLE notification_templates (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    name VARCHAR2(100) NOT NULL UNIQUE,
    title_template VARCHAR2(255) NOT NULL,
    message_template CLOB NOT NULL,
    type VARCHAR2(20) NOT NULL DEFAULT 'info' CHECK (type IN ('info', 'success', 'warning', 'error')),
    category VARCHAR2(20) NOT NULL DEFAULT 'general' CHECK (category IN ('system', 'permission', 'conference', 'session', 'registration', 'general')),
    variables CLOB NULL, -- Danh sách các biến có thể thay thế dưới dạng JSON
    is_active NUMBER(1) NOT NULL DEFAULT 1 CHECK (is_active IN (0, 1)),
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Bảng notification_preferences
CREATE TABLE notification_preferences (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    user_id NUMBER NOT NULL UNIQUE,
    email_notifications NUMBER(1) NOT NULL DEFAULT 1 CHECK (email_notifications IN (0, 1)),
    push_notifications NUMBER(1) NOT NULL DEFAULT 1 CHECK (push_notifications IN (0, 1)),
    in_app_notifications NUMBER(1) NOT NULL DEFAULT 1 CHECK (in_app_notifications IN (0, 1)),
    categories CLOB NULL, -- Tùy chọn theo từng category dưới dạng JSON
    quiet_hours_start VARCHAR2(5) NULL, -- Giờ bắt đầu im lặng (HH:MM)
    quiet_hours_end VARCHAR2(5) NULL, -- Giờ kết thúc im lặng (HH:MM)
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    
    CONSTRAINT fk_notification_preferences_user FOREIGN KEY (user_id) REFERENCES app_users(ID) ON DELETE CASCADE
);

-- Bảng notification_logs
CREATE TABLE notification_logs (
    id NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    notification_id NUMBER NOT NULL,
    user_id NUMBER NOT NULL,
    delivery_method VARCHAR2(20) NOT NULL CHECK (delivery_method IN ('in_app', 'email', 'push')),
    status VARCHAR2(20) NOT NULL DEFAULT 'pending' CHECK (status IN ('pending', 'sent', 'delivered', 'failed')),
    error_message CLOB NULL,
    sent_at TIMESTAMP NULL,
    delivered_at TIMESTAMP NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    
    CONSTRAINT fk_notification_logs_notification FOREIGN KEY (notification_id) REFERENCES notifications(id) ON DELETE CASCADE,
    CONSTRAINT fk_notification_logs_user FOREIGN KEY (user_id) REFERENCES app_users(ID) ON DELETE CASCADE
);

-- Tạo indexes cho performance
CREATE INDEX idx_notifications_user_id ON notifications(user_id);
CREATE INDEX idx_notifications_user_read ON notifications(user_id, is_read);
CREATE INDEX idx_notifications_user_archived ON notifications(user_id, is_archived);
CREATE INDEX idx_notifications_created_at ON notifications(created_at);
CREATE INDEX idx_notifications_expires_at ON notifications(expires_at);
CREATE INDEX idx_notifications_type ON notifications(type);
CREATE INDEX idx_notifications_category ON notifications(category);

CREATE INDEX idx_notification_logs_notification_id ON notification_logs(notification_id);
CREATE INDEX idx_notification_logs_user_id ON notification_logs(user_id);
CREATE INDEX idx_notification_logs_status ON notification_logs(status);
CREATE INDEX idx_notification_logs_sent_at ON notification_logs(sent_at);

-- Insert default notification templates
INSERT INTO notification_templates (name, title_template, message_template, type, category, variables) VALUES
('welcome', 'Chào mừng đến với hệ thống!', 'Chào mừng {{user_name}} đến với hệ thống quản lý hội thảo. Chúc bạn có trải nghiệm tốt!', 'success', 'system', '["user_name"]');

INSERT INTO notification_templates (name, title_template, message_template, type, category, variables) VALUES
('role_changed', 'Quyền của bạn đã được cập nhật', 'Role của bạn đã thay đổi từ "{{old_role}}" thành "{{new_role}}". Vui lòng đăng nhập lại để áp dụng thay đổi.', 'info', 'permission', '["old_role", "new_role"]');

INSERT INTO notification_templates (name, title_template, message_template, type, category, variables) VALUES
('conference_created', 'Hội thảo mới đã được tạo', 'Hội thảo "{{conference_name}}" đã được tạo và bạn có thể đăng ký tham gia.', 'info', 'conference', '["conference_name"]');

INSERT INTO notification_templates (name, title_template, message_template, type, category, variables) VALUES
('session_reminder', 'Nhắc nhở phiên họp', 'Phiên họp "{{session_title}}" sẽ bắt đầu sau {{time_remaining}} phút.', 'warning', 'session', '["session_title", "time_remaining"]');

INSERT INTO notification_templates (name, title_template, message_template, type, category, variables) VALUES
('registration_success', 'Đăng ký thành công', 'Bạn đã đăng ký thành công tham gia hội thảo "{{conference_name}}".', 'success', 'registration', '["conference_name"]');

INSERT INTO notification_templates (name, title_template, message_template, type, category, variables) VALUES
('system_maintenance', 'Bảo trì hệ thống', 'Hệ thống sẽ được bảo trì từ {{start_time}} đến {{end_time}}. Vui lòng lưu công việc của bạn.', 'warning', 'system', '["start_time", "end_time"]');

-- Insert default notification preferences for existing users
INSERT INTO notification_preferences (user_id, email_notifications, push_notifications, in_app_notifications)
SELECT ID, 1, 1, 1 FROM app_users
WHERE ID NOT IN (SELECT user_id FROM notification_preferences);

-- Tạo trigger để tự động cập nhật updated_at
CREATE OR REPLACE TRIGGER tr_notifications_updated_at
    BEFORE UPDATE ON notifications
    FOR EACH ROW
BEGIN
    :NEW.updated_at := CURRENT_TIMESTAMP;
END;
/

CREATE OR REPLACE TRIGGER tr_notification_templates_updated_at
    BEFORE UPDATE ON notification_templates
    FOR EACH ROW
BEGIN
    :NEW.updated_at := CURRENT_TIMESTAMP;
END;
/

CREATE OR REPLACE TRIGGER tr_notification_preferences_updated_at
    BEFORE UPDATE ON notification_preferences
    FOR EACH ROW
BEGIN
    :NEW.updated_at := CURRENT_TIMESTAMP;
END;
/

-- Tạo view cho unread notifications count
CREATE OR REPLACE VIEW user_notification_counts AS
SELECT 
    user_id,
    COUNT(*) as total_notifications,
    SUM(CASE WHEN is_read = 0 THEN 1 ELSE 0 END) as unread_count,
    SUM(CASE WHEN is_archived = 0 THEN 1 ELSE 0 END) as active_count
FROM notifications 
WHERE expires_at IS NULL OR expires_at > CURRENT_TIMESTAMP
GROUP BY user_id;

COMMIT;
