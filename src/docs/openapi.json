{
  "openapi": "3.0.0",
  "info": {
    "title": "Conference Management System API",
    "description": "API for managing conferences, attendees, sessions, and more",
    "version": "1.0.0",
    "contact": {
      "name": "API Support",
      "email": "support@conference.com"
    }
  },
  "servers": [
    {
      "url": "http://localhost:4000/api/v1",
      "description": "Development server"
    }
  ],
  "tags": [
    {
      "name": "Health",
      "description": "Health check endpoints"
    },
    {
      "name": "Authentication",
      "description": "User authentication and authorization"
    },
    {
      "name": "Conferences",
      "description": "Conference management operations"
    },
    {
      "name": "Users",
      "description": "User management operations"
    },
    {
      "name": "Sessions",
      "description": "Session management operations"
    },
    {
      "name": "Attendees",
      "description": "Attendee management operations"
    }
  ],
  "paths": {
    "/ping": {
      "get": {
        "summary": "Health check endpoint",
        "description": "Returns a simple pong response to verify API is working",
        "tags": ["Health"],
        "responses": {
          "200": {
            "description": "Successful response",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          }
        }
      }
    },
    "/healthz": {
      "get": {
        "summary": "Health check endpoint",
        "description": "Returns server health status",
        "tags": ["Health"],
        "responses": {
          "200": {
            "description": "Server is healthy",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthResponse"
                }
              }
            }
          }
        }
      }
    },
    "/conferences": {
      "get": {
        "summary": "List conferences",
        "description": "Get paginated list of conferences with optional filtering",
        "tags": ["Conferences"],
        "parameters": [
          {
            "name": "page",
            "in": "query",
            "description": "Page number",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 1,
              "minimum": 1
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of items per page",
            "required": false,
            "schema": {
              "type": "integer",
              "default": 10,
              "minimum": 1,
              "maximum": 100
            }
          },
          {
            "name": "search",
            "in": "query",
            "description": "Search term for conference name or description",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "category",
            "in": "query",
            "description": "Filter by category",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "Filter by status",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["draft", "published", "active", "completed", "cancelled"]
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of conferences",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConferenceListResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create conference",
        "description": "Create a new conference",
        "tags": ["Conferences"],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateConferenceRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Conference created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConferenceResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/conferences/{id}": {
      "get": {
        "summary": "Get conference by ID",
        "description": "Retrieve a specific conference by its ID",
        "tags": ["Conferences"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Conference ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "Conference details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConferenceResponse"
                }
              }
            }
          },
          "404": {
            "description": "Conference not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "patch": {
        "summary": "Update conference",
        "description": "Update an existing conference",
        "tags": ["Conferences"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Conference ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateConferenceRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Conference updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConferenceResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Conference not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete conference",
        "description": "Delete a conference",
        "tags": ["Conferences"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Conference ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "204": {
            "description": "Conference deleted successfully"
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Conference not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/conferences/{id}/status": {
      "patch": {
        "summary": "Change conference status",
        "description": "Change the status of a conference",
        "tags": ["Conferences"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Conference ID",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ChangeStatusRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Status changed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConferenceResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Conference not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/login": {
      "post": {
        "summary": "User login",
        "description": "Authenticate user and get access token",
        "tags": ["Authentication"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Login successful",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid credentials",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/auth/refresh": {
      "post": {
        "summary": "Refresh access token",
        "description": "Get new access token using refresh token",
        "tags": ["Authentication"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RefreshTokenRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Token refreshed successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LoginResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad request - validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "401": {
            "description": "Invalid refresh token",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer",
        "bearerFormat": "JWT"
      }
    },
    "schemas": {
      "SuccessResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "string",
            "example": "pong"
          }
        }
      },
      "HealthResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "status": {
                "type": "string",
                "example": "ok"
              }
            }
          }
        }
      },
      "Conference": {
        "type": "object",
        "properties": {
          "ID": {
            "type": "integer",
            "description": "Unique identifier for the conference"
          },
          "NAME": {
            "type": "string",
            "description": "Name of the conference",
            "maxLength": 255
          },
          "DESCRIPTION": {
            "type": "string",
            "description": "Description of the conference",
            "maxLength": 1000
          },
          "START_DATE": {
            "type": "string",
            "format": "date-time",
            "description": "Start date and time of the conference"
          },
          "END_DATE": {
            "type": "string",
            "format": "date-time",
            "description": "End date and time of the conference"
          },
          "LOCATION": {
            "type": "string",
            "description": "Location of the conference",
            "maxLength": 255
          },
          "CATEGORY": {
            "type": "string",
            "description": "Category of the conference",
            "maxLength": 100
          },
          "ORGANIZER": {
            "type": "string",
            "description": "Organizer of the conference",
            "maxLength": 255
          },
          "CAPACITY": {
            "type": "integer",
            "description": "Maximum capacity of the conference"
          },
          "STATUS": {
            "type": "string",
            "enum": ["draft", "published", "active", "completed", "cancelled"],
            "description": "Current status of the conference"
          },
          "CREATED_AT": {
            "type": "string",
            "format": "date-time",
            "description": "Creation timestamp"
          }
        },
        "required": ["NAME"]
      },
      "CreateConferenceRequest": {
        "type": "object",
        "properties": {
          "NAME": {
            "type": "string",
            "description": "Name of the conference",
            "maxLength": 255
          },
          "DESCRIPTION": {
            "type": "string",
            "description": "Description of the conference",
            "maxLength": 1000
          },
          "START_DATE": {
            "type": "string",
            "format": "date-time",
            "description": "Start date and time of the conference"
          },
          "END_DATE": {
            "type": "string",
            "format": "date-time",
            "description": "End date and time of the conference"
          },
          "LOCATION": {
            "type": "string",
            "description": "Location of the conference",
            "maxLength": 255
          },
          "CATEGORY": {
            "type": "string",
            "description": "Category of the conference",
            "maxLength": 100
          },
          "ORGANIZER": {
            "type": "string",
            "description": "Organizer of the conference",
            "maxLength": 255
          },
          "CAPACITY": {
            "type": "integer",
            "description": "Maximum capacity of the conference"
          },
          "STATUS": {
            "type": "string",
            "enum": ["draft", "published", "active", "completed", "cancelled"],
            "description": "Current status of the conference"
          }
        },
        "required": ["NAME"]
      },
      "UpdateConferenceRequest": {
        "type": "object",
        "properties": {
          "NAME": {
            "type": "string",
            "description": "Name of the conference",
            "maxLength": 255
          },
          "DESCRIPTION": {
            "type": "string",
            "description": "Description of the conference",
            "maxLength": 1000
          },
          "START_DATE": {
            "type": "string",
            "format": "date-time",
            "description": "Start date and time of the conference"
          },
          "END_DATE": {
            "type": "string",
            "format": "date-time",
            "description": "End date and time of the conference"
          },
          "LOCATION": {
            "type": "string",
            "description": "Location of the conference",
            "maxLength": 255
          },
          "CATEGORY": {
            "type": "string",
            "description": "Category of the conference",
            "maxLength": 100
          },
          "ORGANIZER": {
            "type": "string",
            "description": "Organizer of the conference",
            "maxLength": 255
          },
          "CAPACITY": {
            "type": "integer",
            "description": "Maximum capacity of the conference"
          },
          "STATUS": {
            "type": "string",
            "enum": ["draft", "published", "active", "completed", "cancelled"],
            "description": "Current status of the conference"
          }
        }
      },
      "ChangeStatusRequest": {
        "type": "object",
        "properties": {
          "status": {
            "type": "string",
            "enum": ["draft", "published", "active", "completed", "cancelled"],
            "description": "New status for the conference"
          }
        },
        "required": ["status"]
      },
      "ConferenceResponse": {
        "type": "object",
        "properties": {
          "data": {
            "$ref": "#/components/schemas/Conference"
          }
        }
      },
      "ConferenceListResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Conference"
            }
          },
          "meta": {
            "type": "object",
            "properties": {
              "page": {
                "type": "integer",
                "description": "Current page number"
              },
              "limit": {
                "type": "integer",
                "description": "Items per page"
              },
              "total": {
                "type": "integer",
                "description": "Total number of items"
              },
              "totalPages": {
                "type": "integer",
                "description": "Total number of pages"
              }
            }
          }
        }
      },
      "LoginRequest": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email",
            "description": "User email address"
          },
          "password": {
            "type": "string",
            "description": "User password",
            "minLength": 6
          }
        },
        "required": ["email", "password"]
      },
      "LoginResponse": {
        "type": "object",
        "properties": {
          "data": {
            "type": "object",
            "properties": {
              "accessToken": {
                "type": "string",
                "description": "JWT access token"
              },
              "refreshToken": {
                "type": "string",
                "description": "JWT refresh token"
              },
              "user": {
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "description": "User ID"
                  },
                  "email": {
                    "type": "string",
                    "description": "User email"
                  },
                  "name": {
                    "type": "string",
                    "description": "User name"
                  },
                  "permissions": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "description": "User permissions"
                  }
                }
              }
            }
          }
        }
      },
      "RefreshTokenRequest": {
        "type": "object",
        "properties": {
          "refreshToken": {
            "type": "string",
            "description": "JWT refresh token"
          }
        },
        "required": ["refreshToken"]
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "description": "Error code",
                "examples": ["VALIDATION_ERROR", "UNAUTHORIZED", "FORBIDDEN", "NOT_FOUND", "INTERNAL_ERROR"]
              },
              "message": {
                "type": "string",
                "description": "Human-readable error message"
              },
              "details": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "field": {
                      "type": "string",
                      "description": "Field name with error"
                    },
                    "message": {
                      "type": "string",
                      "description": "Field-specific error message"
                    }
                  }
                },
                "description": "Detailed error information"
              }
            },
            "required": ["code", "message"]
          }
        }
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ]
}


